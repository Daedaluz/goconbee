// Code generated by "stringer -output=strings.go -type=Platform,NetworkState,ParameterID,AddressMode,SecurityMode,PANIDMode,MacCapabilities"; DO NOT EDIT.

package serial

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Conbee-5]
	_ = x[Conbee2-7]
}

const (
	_Platform_name_0 = "Conbee"
	_Platform_name_1 = "Conbee2"
)

func (i Platform) String() string {
	switch {
	case i == 5:
		return _Platform_name_0
	case i == 7:
		return _Platform_name_1
	default:
		return "Platform(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NetOffline-0]
	_ = x[NetJoining-1]
	_ = x[NetConnected-2]
	_ = x[NetLeaving-3]
}

const _NetworkState_name = "NetOfflineNetJoiningNetConnectedNetLeaving"

var _NetworkState_index = [...]uint8{0, 10, 20, 32, 42}

func (i NetworkState) String() string {
	if i >= NetworkState(len(_NetworkState_index)-1) {
		return "NetworkState(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NetworkState_name[_NetworkState_index[i]:_NetworkState_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ParamMACAddress-1]
	_ = x[ParamNWKPANID-5]
	_ = x[ParamNWKAddress-7]
	_ = x[ParamNWKExtendedPANID-8]
	_ = x[ParamAPSDesignedCoordinator-9]
	_ = x[ParamChannelMask-10]
	_ = x[ParamAPSExtendedPANID-11]
	_ = x[ParamTrustCenterAddress-14]
	_ = x[ParamSecurityMode-16]
	_ = x[ParamZDOSlot-19]
	_ = x[ParamPredefinedNWKPANID-21]
	_ = x[ParamNetworkKey-24]
	_ = x[ParamLinkKey-25]
	_ = x[ParamCurrentChannel-28]
	_ = x[ParamOpenNetwork-33]
	_ = x[ParamProtocolVersion-34]
	_ = x[ParamNWKUpdateID-36]
	_ = x[ParamWatchdogTTL-38]
	_ = x[ParamNWKFrameCounter-39]
	_ = x[ParamAppZDPHandling-40]
}

const _ParameterID_name = "ParamMACAddressParamNWKPANIDParamNWKAddressParamNWKExtendedPANIDParamAPSDesignedCoordinatorParamChannelMaskParamAPSExtendedPANIDParamTrustCenterAddressParamSecurityModeParamZDOSlotParamPredefinedNWKPANIDParamNetworkKeyParamLinkKeyParamCurrentChannelParamOpenNetworkParamProtocolVersionParamNWKUpdateIDParamWatchdogTTLParamNWKFrameCounterParamAppZDPHandling"

var _ParameterID_map = map[ParameterID]string{
	1:  _ParameterID_name[0:15],
	5:  _ParameterID_name[15:28],
	7:  _ParameterID_name[28:43],
	8:  _ParameterID_name[43:64],
	9:  _ParameterID_name[64:91],
	10: _ParameterID_name[91:107],
	11: _ParameterID_name[107:128],
	14: _ParameterID_name[128:151],
	16: _ParameterID_name[151:168],
	19: _ParameterID_name[168:180],
	21: _ParameterID_name[180:203],
	24: _ParameterID_name[203:218],
	25: _ParameterID_name[218:230],
	28: _ParameterID_name[230:249],
	33: _ParameterID_name[249:265],
	34: _ParameterID_name[265:285],
	36: _ParameterID_name[285:301],
	38: _ParameterID_name[301:317],
	39: _ParameterID_name[317:337],
	40: _ParameterID_name[337:356],
}

func (i ParameterID) String() string {
	if str, ok := _ParameterID_map[i]; ok {
		return str
	}
	return "ParameterID(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AddressGroup-1]
	_ = x[AddressNWK-2]
	_ = x[AddressIEEE-3]
	_ = x[AddressNWKAndIEEE-4]
}

const _AddressMode_name = "AddressGroupAddressNWKAddressIEEEAddressNWKAndIEEE"

var _AddressMode_index = [...]uint8{0, 12, 22, 33, 50}

func (i AddressMode) String() string {
	i -= 1
	if i >= AddressMode(len(_AddressMode_index)-1) {
		return "AddressMode(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _AddressMode_name[_AddressMode_index[i]:_AddressMode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SecurityNone-0]
	_ = x[SecurityPreconfiguredNK-1]
	_ = x[SecurityNKTC-2]
	_ = x[SecurityNoMasterTCLK-3]
}

const _SecurityMode_name = "SecurityNoneSecurityPreconfiguredNKSecurityNKTCSecurityNoMasterTCLK"

var _SecurityMode_index = [...]uint8{0, 12, 35, 47, 67}

func (i SecurityMode) String() string {
	if i >= SecurityMode(len(_SecurityMode_index)-1) {
		return "SecurityMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SecurityMode_name[_SecurityMode_index[i]:_SecurityMode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PANIDModeNotPredefined-0]
	_ = x[PANIDModePredefined-1]
}

const _PANIDMode_name = "PANIDModeNotPredefinedPANIDModePredefined"

var _PANIDMode_index = [...]uint8{0, 22, 41}

func (i PANIDMode) String() string {
	if i >= PANIDMode(len(_PANIDMode_index)-1) {
		return "PANIDMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PANIDMode_name[_PANIDMode_index[i]:_PANIDMode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MacCapAltCoord-1]
	_ = x[MacCapFFD-2]
	_ = x[MacCapPowerSrc-4]
	_ = x[MacCapReceiverWhenIdle-8]
	_ = x[MacCapSecurity-22]
	_ = x[MacCapAllocAddr-38]
}

const (
	_MacCapabilities_name_0 = "MacCapAltCoordMacCapFFD"
	_MacCapabilities_name_1 = "MacCapPowerSrc"
	_MacCapabilities_name_2 = "MacCapReceiverWhenIdle"
	_MacCapabilities_name_3 = "MacCapSecurity"
	_MacCapabilities_name_4 = "MacCapAllocAddr"
)

var (
	_MacCapabilities_index_0 = [...]uint8{0, 14, 23}
)

func (i MacCapabilities) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _MacCapabilities_name_0[_MacCapabilities_index_0[i]:_MacCapabilities_index_0[i+1]]
	case i == 4:
		return _MacCapabilities_name_1
	case i == 8:
		return _MacCapabilities_name_2
	case i == 22:
		return _MacCapabilities_name_3
	case i == 38:
		return _MacCapabilities_name_4
	default:
		return "MacCapabilities(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
